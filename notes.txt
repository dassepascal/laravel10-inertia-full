https://www.youtube.com/watch?v=_oa-VWqCuOQ&list=PLeeuvNW2FHVjrsrvuVZwyqNIyDvYNn33E&index=2

composer require laravel/jetstream
Factory:

 php artisan make:factory CourseFactory --model=Course

<template>
  <app-layout>
  <template #header>
   liste des formations
  </template>
  <h1>coucou coucou</h1>
  </app-layout>
</template>

<script >
import AppLayout from '@/Layouts/AppLayout.vue'
export default {
components: { AppLayout },
props:
  ['courses'],

},

mounted(){
    console.log(this.courses)
},
}
</script>


<template>
  <app-layout>
  <template #header>
   liste des formations
  </template>
  <h1>coucou coucou</h1>
  </app-layout>
</template>

<script >
import AppLayout from '@/Layouts/AppLayout.vue'
export default {
components: { AppLayout },
data(){
  return {
    courseList:this.courses
  }
},
props:
  ['courses'],

mounted(){
    console.log(this.courseList)
},
}
</script>


creation de la table
php artisan make:migration create_completions_table
Relation many to many

function watched
 //test status avec axios

Participants: on veut juste regader 1 seul
dans CourseController
 public function index()
    {
        $courses = Course::with('user')
        ->select('courses.*',DB::raw)
        ->withCount('episodes')->get();
        //dd($courses);
        return Inertia::render('Courses/Index', [
            'courses' => $courses
        ]);
    }


create progressBar

ensuite dans vue : import ProgressBar from './ProgressBar'

components : ProgressBar

dans template : <progress-bar></progress-bar>

qu'est ce que je veux faire ?
quand je clic sur progressButton ma progressbar change
nombre episodes de la formation + episodes vue par le user

recherche dans le controller dans la methode show
'course' : les episodes
'watched' : episode vue par user

dans Show.vue:
<progress-bar : watched-episodes = "watched" />

on recupere ces informations dans ProgressBar : Props:['watchedEpisodes', 'episodes']

utilisation des methodes computed
pourquoi? cela rafraichi automatiquement la page

   return Math.ceil(filteredEp.length / this.episodes.length * 100);

eventBus

dans app.js
window.eventBus = new Vue();

je vais pouvoir emettre un evenement et l'ecouter
ProgressButton

on veut mettre Ã  jour watchedEpisodes

installation de Vue3-eventBus


affichage flash
doc inertia
share data
class HandleInertiaRequests extends Middleware
{
    public function share(Request $request)
    {
        return array_merge(parent::share($request), [
            'flash' => [
                'message' => fn () => $request->session()->get('message')
            ],
        ]);
    }
}

creation episodes

remove
corbeil lien : https://emojipedia.org/fr/corbeille-%C3%A0-papiers/


Model courses
pb assignement de masse
protected $fillable = ['title','description']
cette formation appartien a l'utilisateur connecte on est oblige de remplir un champ user_id, on ne le recupere pas depuis le request


edit
pb affichage des messages errors

resoud pb edit formations

bouton edit permet au user d'editer leurs formations utilisation de "polities"
php artisan make:policy CoursePolicy

il faut l'indiquer dans le Providers/AuthServiceProvider.php

class AuthServiceProvider extends ServiceProvider
{
    /**
     * The model to policy mappings for the application.
     *
     * @var array<class-string, class-string>
     */
    protected $policies = [

         'App\Models\Course' => 'App\Policies\CoursePolicy',
    ];
}


etape b
dans CoursePolicy
 public function update(User $user, Course $course)
    {
        return $user->id === $course->user_id;
    }

    dans CourseController
    la methode update
      $this->authorize('update', $course);

empecher l'update suer lapage edition


gestion de l'affichage
affiner la vue  contourne le can de Blade

Dans AuthServiceProvider

 public function boot(): void
    {
        $this->registerPolicies();

        Gate::define('update-course', function ($course) {
            return $course->user_id === auth()->user()->id;
        });
    }

    dans Course.php

     protected $appends = ['update'];

   public function getUpdateAttribute()
    {
        //
        return $this->user_id === auth()->id();
    }

    avec ce code si tu es l'editeur du vois le button edit sinon pas de button




